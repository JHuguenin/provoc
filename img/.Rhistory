cat("\n")
cat("         <,_./      |                          ")
cat("\n")
cat("        /           |                          ")
cat("\n")
cat("       /_           |                          ")
cat("\n")
cat("       /  ``--.__.-=!                          ")
cat("\n")
cat("       / /        \ !                          ")
cat("\n")
cat("..... / / ........ ) \ ....................... ")
cat("\n")
cat("     (_ \         (__-->                       ")
cat("\n")
cat("        v                                      ")
cat("\n")
cat("_______________________________________________")
}
walk()
#PCA
dt <- data.frame(row.names(mt$h5)[mt$acq], mt$h5[mt$acq,"nbr_MS"])
colnames(dt) <- c("Nom de l'acquisition","Nbr de MS")
knitr::kable(head(dt,10), format = "markdown")
# Pourcentage de la variance exprimée
df <- data.frame(Dimensions = paste0("PC", 1:mt$PCA_npc), Explained.Variances = MSpca$EV)
ggplot(data=df, aes(x = Dimensions, y = Explained.Variances)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=Explained.Variances), vjust = -0.3, size = 3.5)+
theme_minimal()
library(ggplot2)
library(ggplot2)
ggplot(data=df, aes(x = Dimensions, y = Explained.Variances)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=Explained.Variances), vjust = -0.3, size = 3.5)+
theme_minimal()
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
}
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
library(tidyverse)
library(tidyverse)
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
}
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
#PCA
dt <- data.frame(row.names(mt$h5)[mt$acq], mt$h5[mt$acq,"nbr_MS"])
colnames(dt) <- c("Nom de l'acquisition","Nbr de MS")
knitr::kable(head(dt,10), format = "markdown")
# Pourcentage de la variance exprimée
df <- data.frame(Dimensions = paste0("PC", 1:mt$PCA_npc), Explained.Variances = MSpca$EV)
library(ggplot2)
ggplot(data=df, aes(x = Dimensions, y = Explained.Variances)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=Explained.Variances), vjust = -0.3, size = 3.5)+
theme_minimal()
library(tidyverse)
library(magrittr)
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
}
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
if(mt$PCA_plot_loading_PC[1] == "all"){
mt$PCA_plot_loading_PC <- seq(1:mt$PCA_npc)
}
for(i in mt$PCA_plot_loading_PC){
pc <- i
eph <- MSpca$pk.ld[[pc]][1,]
par(mar = c(3,3,2,.2), mgp = c(1.7,.6,0), cex.main = 1.5, cex.lab = 1, cex.axis = 1,xpd = FALSE)
matplot(sp$xMS_PCA, MSpca$P[,pc], type = "l",
xlim = c(mt$pca_plot_xmin, mt$pca_plot_xmax),
ylim = c(min(MSpca$P[,pc]), max(MSpca$P[,pc]))*1.2,
xlab = "m/z", ylab = "Relative intensity (u.a.)",
main = paste0("loadings of PC", pc, " (", MSpca$EV[pc], " %)"))
bitext(eph, MSpca$P[ch(eph),pc], text = ch(eph), bicex = 1, off7 = 0.3)
}
# Import des fonctions et chargement des bibliotheques :
source("S:/PTR-MS/Rpackages/provoc/R/PTR_MS_fct.R")
for(i in mt$PCA_plot_loading_PC){
pc <- i
eph <- MSpca$pk.ld[[pc]][1,]
par(mar = c(3,3,2,.2), mgp = c(1.7,.6,0), cex.main = 1.5, cex.lab = 1, cex.axis = 1,xpd = FALSE)
matplot(sp$xMS_PCA, MSpca$P[,pc], type = "l",
xlim = c(mt$pca_plot_xmin, mt$pca_plot_xmax),
ylim = c(min(MSpca$P[,pc]), max(MSpca$P[,pc]))*1.2,
xlab = "m/z", ylab = "Relative intensity (u.a.)",
main = paste0("loadings of PC", pc, " (", MSpca$EV[pc], " %)"))
bitext(eph, MSpca$P[ch(eph),pc], text = ch(eph), bicex = 1, off7 = 0.3)
}
if(mt$pca_view_plot == TRUE){
for(j in mt$acq){
par(mar = c(3,3,1.5,0.5), cex = 1.2, mgp = c(2,0.75,0))
matplot(sp$xMS, sp$MS_max[j,],
type = "l", col = alpha("grey50",0.3),
xlim = c(mt$pca_plot_xmin, mt$pca_plot_xmax),
ylim = c(0, max(sp$MS_max[j,])*1.2),
xlab = "m/z", ylab = "Relative intensity (u.a.)",
main = row.names(mt$h5)[j])
text(sp$pk$MS_max[[j]][1,], sp$pk$MS_max[[j]][2,], labels = sp$pk$MS_max[[j]][1,], cex = 0.8, pos = 3, offset = 0.5)
}
}
# Loadings zoom
if(mt$pca_loading_plot_zoom == TRUE){
for(pc in 1:mt$PCA_npc){
xM <- dizaine(mt$pca_plot_xmin)
while(xM <= mt$pca_plot_xmax){
eph <- MSpca$pk.ld[[pc]][1,]
par(mar = c(3,3,2,.2), mgp = c(1.7,.6,0), cex.main = 1.5, cex.lab = 1, cex.axis = 1,xpd = FALSE)
matplot(sp$xMS_PCA, MSpca$P[,pc], type = "l",
xlim = c(xM, add(xM,mt$w.zoom)),
ylim = c(min(MSpca$P[,pc]), max(MSpca$P[,pc]))*1.2,
xlab = "m/z", ylab = "Relative intensity (u.a.)",
main = paste0("loadings of PC", pc, " (zoom)"))
bitext(eph, MSpca$P[ch(eph),pc], text = ch(eph), bicex = 1, off7 = 0.3)
abline(v = seq(xM,add(xM,mt$w.zoom),length.out = 4), lty = 2, col = "grey50")
xM <- add(xM, mt$w.zoom)
}
}
}
#PCA
getwd()
dir("PCA") %>% grep("rapport_pca",.) %>% length() %>%
add(1) %>% paste0(sp$h5$wd,"/PCA/rapport_pca",.,".pdf")
titrepdf <-  "S:/PTR-MS/Magali Proffit/Candice/Lavandes2021/sem23_48h_3series/3x4chb/analyse reduite/rapport_pca.pdf")
titrepdf <-  "S:/PTR-MS/Magali Proffit/Candice/Lavandes2021/sem23_48h_3series/3x4chb/analyse reduite/rapport_pca.pdf"
library(tidyverse)
library(magrittr)
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
}
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
mt$h5$color
mt$h5$color
mt$acq
#col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
col_l <- c(NA, viridis(420,0.5))
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
#col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
col_l <- c(NA, viridis(420,0.5))
}
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
print("plip")
}else{
print("plop")
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
#col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
col_l <- c(NA, viridis(420,0.5))
}
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5)
i
j
dim(MSpca$Tr[,ax.pca[1]])
length(MSpca$Tr[,ax.pca[1]])
length(MSpca$Tr[,ax.pca[2]])
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
}
length(MSpca$Tr[,ax.pca[1]])
length(MSpca$Tr[,ax.pca[2]])
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
for(i in 1:(mt$PCA_npc-1)){
mt$PCx <- i
for(j in (i+1):mt$PCA_npc){
mt$PCy <- j
ax.pca <- c(mt$PCx, mt$PCy)
if(length(row.names(mt$h5)[mt$acq]) > 8){
l_ech <- length(row.names(mt$h5)[mt$acq])
ml_ech <- divide_by(l_ech,2) %>% floor()
legende <- c(row.names(mt$h5)[mt$acq[1:3]],
row.names(mt$h5)[mt$acq[ml_ech:(ml_ech+2)]],
row.names(mt$h5)[mt$acq[(l_ech-2):l_ech]])
p_ch <- c(NA, rep(16,9))
col_l <- c(NA, alpha(mt$h5$color[mt$acq[c(1:3,(ml_ech:(ml_ech+2)),((l_ech-2):l_ech))]],0.5))
}else{
legende <- c(row.names(mt$h5)[mt$acq])
p_ch <- c(NA, rep(16,length(mt$acq)))
col_l <- c(NA, alpha(mt$h5$color[mt$acq],0.5))
}
print(length(MSpca$Tr[,ax.pca[1]]))
print(length(MSpca$Tr[,ax.pca[2]]))
par(mar = c(3,3,1,8), mgp = c(1.7,.6,0), cex.main = 1, cex.lab = 1, cex.axis = 1,xpd = FALSE)
plot(MSpca$Tr[,ax.pca[1]], MSpca$Tr[,ax.pca[2]], pch = 16, col = alpha(MSpca$mt_col,0.5),
xlab = paste("PC",ax.pca[1],"(",MSpca$EV[ax.pca[1]],"%)"),
ylab = paste("PC",ax.pca[2],"(",MSpca$EV[ax.pca[2]],"%)"))
abline(h =0, v = 0, lty = 2)
legend("topright", bty = "n", cex = 1, xpd = NA, inset = c(-0.31,0),
legend = c("Sample(s) :",legende) , pch = p_ch, col = col_l, pt.cex = 1)
}
}
MSpca$mt_col
dim(MSpca$mt_col)
5*420
viridis(2100,0.5)
library(viridis)
res.rd <- function(seed = Sys.time(), mC = Clan, mP = Predation){
if((is.numeric(seed)==FALSE)&(class(seed)[1] != "POSIXct")){
seed <- sum(utf8ToInt(seed))
}
set.seed(seed)
fmr <- c(sample(nrow(mP),1), sample(nrow(mC),1))
list(clan = mC[fmr[2],1],
disc.clan = sample(mC[fmr[2],-1],2),
pred = mP[fmr[1],1],
disc.pred = sample(mP[fmr[1],-1],1))
}
res.rd()
Predation <- matrix(c("Biberonneur","Sorcellerie de sang","Occultation",
"Chat de gouttiere","Celerite","Puissance",
"Consensualiste","Auspex","Force d'ame",
"Fermier","Animalisme","Proteisme",
"Lamproie","Celerite","Proteisme",
"Marchand de sable","Auspex","Occultation",
"Osiris","Sorcellerie de sang","Presence",
"Parasite domestique","Domination","Animalisme",
"Reine de la nuit","Domination","Puissance",
"Succube","Force d'ame","Presence"),10,3,byrow = TRUE)
Clan <- matrix(c("Brujah","Celerite","Puissance","Presence",
"Gangrel","Animalisme","Force d'ame","Proteisme",
"Malkavien","Auspex","Domination","Occultation",
"Nosferatu","Animalisme","Puissance","Occultation",
"Toreador","Celerite","Presence","Auspex",
"Tremere","Auspex","Domination","Sorcellerie de sang",
"Ventrue","Force d'ame","Domination","Presence",
"Sacerdoce","Occultation","Presence","Proteisme",
"Banu Haqim","Celerite","Occultation","Sorcellerie de sang",
"Salubrien","Auspex","Domination","Force d'ame",
"Ravnos","Animalisme","Presence","Occultation"),11,4,byrow = TRUE)
res.rd <- function(seed = Sys.time(), mC = Clan, mP = Predation){
if((is.numeric(seed)==FALSE)&(class(seed)[1] != "POSIXct")){
seed <- sum(utf8ToInt(seed))
}
set.seed(seed)
fmr <- c(sample(nrow(mP),1), sample(nrow(mC),1))
list(clan = mC[fmr[2],1],
disc.clan = sample(mC[fmr[2],-1],2),
pred = mP[fmr[1],1],
disc.pred = sample(mP[fmr[1],-1],1))
}
res.rd()
para_crea <- list(
Predation = matrix(c("Biberonneur","Sorcellerie de sang","Occultation",
"Chat de gouttiere","Celerite","Puissance",
"Consensualiste","Auspex","Force d'ame",
"Fermier","Animalisme","Proteisme",
"Lamproie","Celerite","Proteisme",
"Marchand de sable","Auspex","Occultation",
"Osiris","Sorcellerie de sang","Presence",
"Parasite domestique","Domination","Animalisme",
"Reine de la nuit","Domination","Puissance",
"Succube","Force d'ame","Presence"),10,3,byrow = TRUE),
Clan = matrix(c("Brujah","Celerite","Puissance","Presence",
"Gangrel","Animalisme","Force d'ame","Proteisme",
"Malkavien","Auspex","Domination","Occultation",
"Nosferatu","Animalisme","Puissance","Occultation",
"Toreador","Celerite","Presence","Auspex",
"Tremere","Auspex","Domination","Sorcellerie de sang",
"Ventrue","Force d'ame","Domination","Presence",
"Sacerdoce","Occultation","Presence","Proteisme",
"Banu Haqim","Celerite","Occultation","Sorcellerie de sang",
"Salubrien","Auspex","Domination","Force d'ame",
"Ravnos","Animalisme","Presence","Occultation"),11,4,byrow = TRUE))
para_crea <- list(
Predation = matrix(c("Biberonneur","Sorcellerie de sang","Occultation",
"Chat de gouttiere","Celerite","Puissance",
"Consensualiste","Auspex","Force d'ame",
"Fermier","Animalisme","Proteisme",
"Lamproie","Celerite","Proteisme",
"Marchand de sable","Auspex","Occultation",
"Osiris","Sorcellerie de sang","Presence",
"Parasite domestique","Domination","Animalisme",
"Reine de la nuit","Domination","Puissance",
"Succube","Force d'ame","Presence"),10,3,byrow = TRUE),
Clan = matrix(c("Brujah","Celerite","Puissance","Presence",
"Gangrel","Animalisme","Force d'ame","Proteisme",
"Malkavien","Auspex","Domination","Occultation",
"Nosferatu","Animalisme","Puissance","Occultation",
"Toreador","Celerite","Presence","Auspex",
"Tremere","Auspex","Domination","Sorcellerie de sang",
"Ventrue","Force d'ame","Domination","Presence",
"Sacerdoce","Occultation","Presence","Proteisme",
"Banu Haqim","Celerite","Occultation","Sorcellerie de sang",
"Salubrien","Auspex","Domination","Force d'ame",
"Ravnos","Animalisme","Presence","Occultation"),11,4,byrow = TRUE))
PC = para_crea
res.rd <- function(seed = Sys.time(), PC = para_crea){
if((is.numeric(seed)==FALSE)&(class(seed)[1] != "POSIXct")){
seed <- sum(utf8ToInt(seed))
}
set.seed(seed)
fmr <- c(sample(nrow(PC$Predation),1), sample(nrow(PC$Clan),1))
list(clan = PC$Clan[fmr[2],1],
disc.clan = sample(PC$Clan[fmr[2],-1],2),
pred = PC$Clan[fmr[1],1],
disc.pred = sample(PC$Clan[fmr[1],-1],1))
}
res.rd()
res.rd()
Specialiste :
rep(2,8)
rep(2,8)
rep(1,10)
rep(1,7)
# Compare MPG distributions for cars with
# 4,6, or 8 cylinders
library(sm)
attach(mtcars)
# create value labels
cyl.f <- factor(cyl, levels= c(4,6,8),
labels = c("4 cylinder", "6 cylinder", "8 cylinder"))
# plot densities
sm.density.compare(mpg, cyl, xlab="Miles Per Gallon")
title(main="MPG Distribution by Car Cylinders")
# add legend via mouse click
colfill<-c(2:(2+length(levels(cyl.f))))
legend(locator(1), levels(cyl.f), fill=colfill)
library(provoc)
# working directory
# wd <- "S:/PTR-MS/Magali Proffit/Candice/Lavandes2021/sem23_48h_3series/3x4chb/analyse reduite"
wd <- "C:/Users/huguenin/Documents/R/provoc2/data test/miscalenous" # sans "/" final
#wd <- "S:/PTR-MS/Laurent Dormont/Caroline/seq_cancer"
setwd(wd)
getwd
getwd()
#wd <- "S:/PTR-MS/Laurent Dormont/Caroline/seq_cancer"
setwd(wd)
install.packages("hexSticker")
setwd("C:/Users/huguenin/Documents/R/provoc/img")
sticker("logo.png", package="hexSticker", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="imgfile.png")
library("hexSticker")
sticker("logo.png", package="hexSticker", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1, filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2, filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2, h_color = "darkorange2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "darkorange2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "lightskyblue2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "slategray2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "slategray2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "slategray2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "slategray2", filename="imgfile.png")
sticker("logo.png", package="", s_x=1, s_y=1, s_width=1.2,
h_color = "slategray2", filename="imgfile.png")
